{"version":3,"sources":["Components/CardsCoin.js","Components/CardsDrink.js","App.js","reportWebVitals.js","index.js"],"names":["CardsCoins","setCoin","className","map","e","i","Button","variant","onClick","actual","CardsDrink","drink","setTotal","total","sell","setDrink","Card","useState","active","setActive","сounter","setCounter","name","useEffect","setCount","c","totalCoin","inputCounter","value","quantity","exec","p","price","d","stopPropagation","style","display","IconButton","Input","fullWidth","onChange","currentTarget","App","coin","totalPrice","setTotalPrice","setSell","sellActive","setSellActive","reduce","a","b","console","log","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d8821bb.chunk.js","sourcesContent":["import { Button } from '@material-ui/core'\r\nimport './CardsCoin.css'\r\n\r\nexport const CardsCoins = ({ setCoin }) => {\r\n  const coin = [1, 2, 5, 10]\r\n\r\n  return (\r\n    <div className='Cards'>\r\n      {coin.map((e, i) => (\r\n        <div className='buttonCoin'>\r\n          <Button\r\n            \r\n            key={i}\r\n            variant='contained'\r\n            onClick={() => setCoin((actual) => actual + e)}>\r\n            {e}\r\n          </Button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft'\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight'\r\nimport { IconButton, Input } from '@material-ui/core'\r\n\r\nexport const CardsDrink = ({ drink, setTotal, total, sell, setDrink }) => {\r\n  return (\r\n    <div className='Cards'>\r\n      {drink.map((e, i) => (\r\n        <Card\r\n          drink={drink}\r\n          key={i}\r\n          e={e}\r\n          setTotal={setTotal}\r\n          total={total}\r\n          sell={sell}\r\n          setDrink={setDrink}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Card = ({ e, setTotal, total, sell, setDrink, drink }) => {\r\n  const [active, setActive] = useState(false)\r\n  const [сounter, setCounter] = useState(0)\r\n  const name = e.name\r\n\r\n  useEffect(() => {\r\n    setActive(false)\r\n    setCount(0)\r\n  }, [sell])\r\n\r\n  const onClick = () => {\r\n    if (e.quantity) {\r\n      setActive(!active)\r\n      active ? setCount(0) : setCount(1)\r\n    }\r\n  }\r\n\r\n  const setCount = (c) => {\r\n    setCounter(c)\r\n    totalCoin(c)\r\n  }\r\n\r\n  const inputCounter = (value) => {\r\n    if (e.quantity >= value) setCount(+/\\d+/.exec(value))\r\n    if (e.quantity < value) setCount(e.quantity)\r\n    if (!value || value <= 0) setCount(1)\r\n    if (value === 0) setActive(false)\r\n  }\r\n\r\n  const Card = !active ? 'Card' : 'Card active'\r\n\r\n  const totalCoin = (p) => {\r\n    const price = p * e.price\r\n\r\n    const quantity = e.quantity - p\r\n\r\n    setTotal(\r\n      total.map((d) => (d.name === e.name ? { name, price, quantity } : d))\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div onClick={onClick} className={Card}>\r\n        <div>{e.name}</div>\r\n        <div>Цена: {e.price} Монет</div>\r\n        <div>Осталось: {e.quantity}</div>\r\n        {active ? (\r\n          <div onClick={(e) => e.stopPropagation()} style={{ display: 'flex' }}>\r\n            <IconButton\r\n              onClick={() => {\r\n                if (сounter > 1) setCount(сounter - 1)\r\n              }}>\r\n              <ArrowLeftIcon />\r\n            </IconButton>\r\n            <Input\r\n              fullWidth={true}\r\n              onChange={(e) => inputCounter(e.currentTarget.value)}\r\n              value={сounter}\r\n            />\r\n            <IconButton\r\n              onClick={() => {\r\n                if (сounter < e.quantity) setCount(сounter + 1)\r\n              }}>\r\n              <ArrowRightIcon />\r\n            </IconButton>\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { Button } from '@material-ui/core'\nimport { useEffect, useState } from 'react'\nimport './App.css'\nimport { CardsCoins } from './Components/CardsCoin'\nimport { CardsDrink } from './Components/CardsDrink'\n\nconst App = () => {\n  const [coin, setCoin] = useState(0)\n  const [drink, setDrink] = useState([\n    { name: 'Кола', price: 10, quantity: 20 },\n    { name: 'Кофе', price: 5, quantity: 40 },\n  ])\n  const [total, setTotal] = useState([{ price: 0 }])\n  const [totalPrice, setTotalPrice] = useState('')\n  const [sell, setSell] = useState(false)\n  const [sellActive, setSellActive] = useState(false)\n\n  useEffect(() => {\n    setTotal(drink.map(e => ({ name: e.name, price: 0, quantity: 0 })))\n  }, [])\n\n  useEffect(() => {\n    if (total) {\n      setTotalPrice(total.map(e => e.price).reduce((a, b) => a + b))\n    }\n  }, [total])\n\n  useEffect(() => {\n    if (totalPrice <= coin && totalPrice !== 0) setSellActive(true)\n    else setSellActive(false)\n    console.log(sellActive)\n  }, [totalPrice, coin])\n\n  const Sell = () => {\n    total.map(d => (d.price = 0))\n    setCoin(coin - totalPrice)\n    setTotalPrice(0)\n    setSell(!sell)\n    setSellActive(false)\n  }\n\n  return (\n    <div className='App'>\n      <div className='Container'>\n        <h1>Вставьте монету</h1>\n        <CardsCoins setCoin={setCoin} />\n        <h3>Ваш счёт: {coin} Монет</h3>\n        <h1>Выберите напиток</h1>\n        <CardsDrink\n          setDrink={setDrink}\n          drink={drink}\n          setTotal={setTotal}\n          total={total}\n          sell={sell}\n        />\n        <Button disabled={!sellActive} variant='contained' onClick={Sell}>\n          Купить\n        </Button>\n        <h2>Итого: {totalPrice} Монет</h2>\n        <Button onClick={() => setCoin(0)}>Получить сдачу</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}